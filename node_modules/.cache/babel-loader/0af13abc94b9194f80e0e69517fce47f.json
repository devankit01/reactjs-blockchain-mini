{"ast":null,"code":"var _jsxFileName = \"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/src/context/TransactionContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\nimport { contractabi, contractAddress } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/React.createContext();\nconst {\n  ethereum\n} = window;\n\nconst getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const transactionsContract = new ethers.Contract(contractAddress, contractabi, signer);\n  console.log({\n    provider,\n    signer,\n    transactionsContract\n  });\n};\n\nexport const TransactionProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [connectAccount, setconnectAccount] = useState('');\n  const [formdata, setformdata] = useState({\n    addressTo: '',\n    amount\n  });\n\n  const checkMetaMaskisConnected = async () => {\n    if (!ethereum) return alert('Please install Metamask wallet');\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n    console.log(accounts);\n\n    if (accounts.length) {\n      setconnectAccount(accounts[0]); // GetAllTransactions()\n    } else {\n      console.log('No accounts found');\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      if (!ethereum) return alert('Please install Metamask wallet');\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setconnectAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n\n    const sendTransaction = async () => {};\n  }; // OnLoad Window\n\n\n  useEffect(() => {\n    checkMetaMaskisConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      connectWallet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionProvider, \"NTn8q9yYzNWPL31+4JOqv+MgiOM=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["React","useEffect","useState","ethers","contractabi","contractAddress","TransactionContext","createContext","ethereum","window","getEthereumContract","provider","providers","Web3Provider","signer","getSigner","transactionsContract","Contract","console","log","TransactionProvider","children","connectAccount","setconnectAccount","formdata","setformdata","addressTo","amount","checkMetaMaskisConnected","alert","accounts","request","method","length","connectWallet","error","sendTransaction"],"sources":["/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/src/context/TransactionContext.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\n\nimport { contractabi, contractAddress } from '../utils/constants';\n\n\nexport const TransactionContext = React.createContext();\n\nconst { ethereum } = window;\n\nconst getEthereumContract = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const transactionsContract = new ethers.Contract(contractAddress, contractabi, signer);\n\n    console.log({\n        provider,\n        signer,\n        transactionsContract\n    })\n}\n\n\nexport const TransactionProvider = ({ children }) => {\n\n    const [connectAccount, setconnectAccount] = useState('');\n    const [formdata, setformdata] = useState({ addressTo : '', amount})\n    const checkMetaMaskisConnected = async () => {\n        if (!ethereum) return alert('Please install Metamask wallet');\n\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n        console.log(accounts)\n\n        if (accounts.length) {\n            setconnectAccount(accounts[0])\n            // GetAllTransactions()\n\n        } else{\n            console.log('No accounts found')\n        }\n    }\n\n\n    const connectWallet = async () => {\n        try {\n            if (!ethereum) return alert('Please install Metamask wallet');\n            const accounts = await ethereum.request({ method: \"eth_requestAccounts\", });\n\n            setconnectAccount(accounts[0])\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    const sendTransaction = async () => {\n\n    }\n    }\n\n    // OnLoad Window\n    useEffect(() => {\n        checkMetaMaskisConnected();\n    }, []);\n\n\n    return (\n        <TransactionContext.Provider value={{ connectWallet }} >\n            {children}\n\n        </ TransactionContext.Provider >\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,oBAA7C;;AAGA,OAAO,MAAMC,kBAAkB,gBAAGN,KAAK,CAACO,aAAN,EAA3B;AAEP,MAAM;EAAEC;AAAF,IAAeC,MAArB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAC9B,MAAMC,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAP,CAAiBC,YAArB,CAAkCL,QAAlC,CAAjB;EACA,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;EACA,MAAMC,oBAAoB,GAAG,IAAIb,MAAM,CAACc,QAAX,CAAoBZ,eAApB,EAAqCD,WAArC,EAAkDU,MAAlD,CAA7B;EAEAI,OAAO,CAACC,GAAR,CAAY;IACRR,QADQ;IAERG,MAFQ;IAGRE;EAHQ,CAAZ;AAKH,CAVD;;AAaA,OAAO,MAAMI,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAEjD,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC;IAAEwB,SAAS,EAAG,EAAd;IAAkBC;EAAlB,CAAD,CAAxC;;EACA,MAAMC,wBAAwB,GAAG,YAAY;IACzC,IAAI,CAACpB,QAAL,EAAe,OAAOqB,KAAK,CAAC,gCAAD,CAAZ;IAEf,MAAMC,QAAQ,GAAG,MAAMtB,QAAQ,CAACuB,OAAT,CAAiB;MAAEC,MAAM,EAAE;IAAV,CAAjB,CAAvB;IACAd,OAAO,CAACC,GAAR,CAAYW,QAAZ;;IAEA,IAAIA,QAAQ,CAACG,MAAb,EAAqB;MACjBV,iBAAiB,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAjB,CADiB,CAEjB;IAEH,CAJD,MAIM;MACFZ,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACH;EACJ,CAbD;;EAgBA,MAAMe,aAAa,GAAG,YAAY;IAC9B,IAAI;MACA,IAAI,CAAC1B,QAAL,EAAe,OAAOqB,KAAK,CAAC,gCAAD,CAAZ;MACf,MAAMC,QAAQ,GAAG,MAAMtB,QAAQ,CAACuB,OAAT,CAAiB;QAAEC,MAAM,EAAE;MAAV,CAAjB,CAAvB;MAEAT,iBAAiB,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAjB;IAEH,CAND,CAME,OAAOK,KAAP,EAAc;MACZjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ;IACH;;IAEL,MAAMC,eAAe,GAAG,YAAY,CAEnC,CAFD;EAGC,CAdD,CApBiD,CAoCjD;;;EACAnC,SAAS,CAAC,MAAM;IACZ2B,wBAAwB;EAC3B,CAFQ,EAEN,EAFM,CAAT;EAKA,oBACI,QAAC,kBAAD,CAAoB,QAApB;IAA6B,KAAK,EAAE;MAAEM;IAAF,CAApC;IAAA,UACKb;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAhDM;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}