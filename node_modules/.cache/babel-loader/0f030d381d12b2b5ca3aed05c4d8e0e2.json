{"ast":null,"code":"import _asyncToGenerator from\"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{ethers}from\"ethers\";import{contractabi,contractAddress}from'../utils/constants';import{jsx as _jsx}from\"react/jsx-runtime\";export var TransactionContext=/*#__PURE__*/React.createContext();var _window=window,ethereum=_window.ethereum;var getEthereumContract=function getEthereumContract(){var provider=new ethers.providers.Web3Provider(ethereum);var signer=provider.getSigner();var transactionsContract=new ethers.Contract(contractAddress,contractabi,signer);console.log({provider:provider,signer:signer,transactionsContract:transactionsContract});return transactionsContract;};export var TransactionProvider=function TransactionProvider(_ref){var children=_ref.children;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),connectAccount=_useState2[0],setconnectAccount=_useState2[1];var _useState3=useState({addressTo:'',amount:'',keyword:'',message:''}),_useState4=_slicedToArray(_useState3,2),formdata=_useState4[0],setformdata=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isloading=_useState6[0],setisloading=_useState6[1];var _useState7=useState(localStorage.getItem('transactionCount')),_useState8=_slicedToArray(_useState7,2),transactionCount=_useState8[0],setTransactionCount=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),transactions=_useState10[0],setTransactions=_useState10[1];// Handle formdata\nvar handleChange=function handleChange(e,name){console.log(e);setformdata(function(formdata){return _objectSpread(_objectSpread({},formdata),{},_defineProperty({},e.target.name,e.target.value));});console.log(formdata);};var getAllTransactions=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var transactionsContract,transactions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:transactionsContract=getEthereumContract();_context.next=3;return transactionsContract.getAllTransactions();case 3:transactions=_context.sent;console.log('All Transactions  : ',transactions);setTransactions(transactions);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getAllTransactions(){return _ref2.apply(this,arguments);};}();// Check MetaMask Connection\nvar checkMetaMaskisConnected=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var accounts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(ethereum){_context2.next=2;break;}return _context2.abrupt(\"return\",alert('Please install Metamask wallet'));case 2:_context2.next=4;return ethereum.request({method:'eth_accounts'});case 4:accounts=_context2.sent;console.log('MetaMask Logged Account : ',accounts[0]);getAllTransactions();if(accounts.length){setconnectAccount(accounts[0]);}else{console.log('No accounts found');}case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function checkMetaMaskisConnected(){return _ref3.apply(this,arguments);};}();// Connect MetaMask\nvar connectWallet=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var accounts;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(ethereum){_context3.next=3;break;}return _context3.abrupt(\"return\",alert('Please install Metamask wallet'));case 3:_context3.next=5;return ethereum.request({method:\"eth_requestAccounts\"});case 5:accounts=_context3.sent;setconnectAccount(accounts[0]);// Get All Transactions\ngetAllTransactions();_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function connectWallet(){return _ref4.apply(this,arguments);};}();// Perform Transaction\nvar sendTransaction=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var addressTo,amount,keyword,message,transactionsContract,parsedamount,transactionHash,transactionCount;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log('Send Transaction');addressTo=formdata.addressTo,amount=formdata.amount,keyword=formdata.keyword,message=formdata.message;// Get Contract\ntransactionsContract=getEthereumContract();console.log(transactionsContract);parsedamount=ethers.utils.parseEther(amount);_context4.next=7;return ethereum.request({method:'eth_sendTransaction',params:[{from:connectAccount,to:addressTo,gas:'0x5208',// Hex value of Gas in Gwei 21000,\nvalue:parsedamount._hex}]});case 7:_context4.next=9;return transactionsContract.addToBlockchain(addressTo,parsedamount,message,keyword);case 9:transactionHash=_context4.sent;setisloading(true);_context4.next=13;return transactionHash.wait();case 13:setisloading(false);console.log('Transaction Hash : ',transactionHash.hash);// Get All Transaction Count \n_context4.next=17;return transactionsContract.getTransactionsCount();case 17:transactionCount=_context4.sent;setTransactionCount(transactionCount.toNumber());console.log('Transaction Count : ',Number(transactionCount));case 20:case\"end\":return _context4.stop();}}},_callee4);}));return function sendTransaction(){return _ref5.apply(this,arguments);};}();// OnLoad Window\nuseEffect(function(){checkMetaMaskisConnected();},[]);return/*#__PURE__*/_jsx(TransactionContext.Provider,{value:{connectWallet:connectWallet,connectAccount:connectAccount,formdata:formdata,setformdata:setformdata,handleChange:handleChange,sendTransaction:sendTransaction,transactions:transactions},children:children});};","map":{"version":3,"names":["React","useEffect","useState","ethers","contractabi","contractAddress","TransactionContext","createContext","window","ethereum","getEthereumContract","provider","providers","Web3Provider","signer","getSigner","transactionsContract","Contract","console","log","TransactionProvider","children","connectAccount","setconnectAccount","addressTo","amount","keyword","message","formdata","setformdata","isloading","setisloading","localStorage","getItem","transactionCount","setTransactionCount","transactions","setTransactions","handleChange","e","name","target","value","getAllTransactions","checkMetaMaskisConnected","alert","request","method","accounts","length","connectWallet","sendTransaction","parsedamount","utils","parseEther","params","from","to","gas","_hex","addToBlockchain","transactionHash","wait","hash","getTransactionsCount","toNumber","Number"],"sources":["/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/src/context/TransactionContext.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from \"ethers\";\n\nimport { contractabi, contractAddress } from '../utils/constants';\n\n\nexport const TransactionContext = React.createContext();\n\nconst { ethereum } = window;\n\nconst getEthereumContract = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const transactionsContract = new ethers.Contract(contractAddress, contractabi, signer);\n\n    console.log({\n        provider,\n        signer,\n        transactionsContract\n    })\n\n    return transactionsContract;\n}\n\n\nexport const TransactionProvider = ({ children }) => {\n\n    const [connectAccount, setconnectAccount] = useState('');\n    const [formdata, setformdata] = useState({ addressTo: '', amount: '', keyword: '', message: '' })\n    const [isloading, setisloading] = useState(false);\n    const [transactionCount, setTransactionCount] = useState(localStorage.getItem('transactionCount'));\n    const [transactions, setTransactions] = useState([]);\n\n\n    // Handle formdata\n    const handleChange = (e, name) => {\n        console.log(e)\n        setformdata((formdata) => ({ ...formdata, [e.target.name]: e.target.value }));\n        console.log(formdata)\n    }\n\n    const getAllTransactions = async () => {\n        const transactionsContract = getEthereumContract();\n        const transactions = await transactionsContract.getAllTransactions();\n        console.log('All Transactions  : ', transactions)\n        setTransactions(transactions);\n    }\n\n    // Check MetaMask Connection\n    const checkMetaMaskisConnected = async () => {\n\n        if (!ethereum) return alert('Please install Metamask wallet');\n\n\n        // Get All Accounts\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n        console.log('MetaMask Logged Account : ', accounts[0])\n        \n        getAllTransactions();\n\n\n        if (accounts.length) {\n            setconnectAccount(accounts[0])\n\n\n        } else {\n            console.log('No accounts found')\n        }\n    }\n\n\n    // Connect MetaMask\n    const connectWallet = async () => {\n        try {\n\n            if (!ethereum) return alert('Please install Metamask wallet');\n            // Set Account\n            const accounts = await ethereum.request({ method: \"eth_requestAccounts\", });\n            setconnectAccount(accounts[0])\n\n            // Get All Transactions\n            getAllTransactions();\n\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    // Perform Transaction\n    const sendTransaction = async () => {\n        console.log('Send Transaction')\n        const { addressTo, amount, keyword, message } = formdata;\n\n        // Get Contract\n        const transactionsContract = getEthereumContract();\n        console.log(transactionsContract)\n        const parsedamount = ethers.utils.parseEther(amount)\n\n        await ethereum.request({\n            method: 'eth_sendTransaction',\n            params: [{\n                from: connectAccount,\n                to: addressTo,\n                gas: '0x5208', // Hex value of Gas in Gwei 21000,\n                value: parsedamount._hex,\n\n            }]\n        })\n\n        // Store Transaction to Blockchain\n        const transactionHash = await transactionsContract.addToBlockchain(addressTo, parsedamount, message, keyword);\n        setisloading(true)\n        await transactionHash.wait();\n        setisloading(false)\n        console.log('Transaction Hash : ', transactionHash.hash)\n\n        // Get All Transaction Count \n        const transactionCount = await transactionsContract.getTransactionsCount();\n        setTransactionCount(transactionCount.toNumber())\n        console.log('Transaction Count : ', Number(transactionCount))\n\n\n\n    }\n\n\n\n    // OnLoad Window\n    useEffect(() => {\n        checkMetaMaskisConnected();\n    }, []);\n\n\n    return (\n        <TransactionContext.Provider value={{ connectWallet, connectAccount, formdata, setformdata, handleChange, sendTransaction, transactions }} >\n            {children}\n        </ TransactionContext.Provider >\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}