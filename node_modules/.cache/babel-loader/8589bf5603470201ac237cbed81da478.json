{"ast":null,"code":"'use strict';\n\nvar BN = require('bignumber.js');\n\nfunction parseUnit(unit) {\n  var decimalsToUnit = {\n    '-18': 'wei',\n    '-15': 'kwei',\n    '-12': 'mwei',\n    '-9': 'gwei',\n    '-6': 'szabo',\n    '-3': 'finney',\n    1: 'ether',\n    3: 'kether',\n    6: 'mether',\n    9: 'gether',\n    12: 'tether'\n  };\n\n  if (typeof unit === 'string') {\n    unit = unit.trim().toLowerCase();\n  }\n\n  if (unit !== undefined && !isNaN(unit)) {\n    unit = decimalsToUnit[unit];\n  }\n\n  return unit;\n}\n\nfunction convertToEther(value, unit) {\n  if (value === undefined) {\n    throw TypeError('value is required');\n  }\n\n  unit = parseUnit(unit);\n\n  if (unit === undefined) {\n    throw TypeError('unit is required');\n  }\n\n  var v = new BN(value);\n  if (unit === 'eth') unit = 'ether';\n  if (unit === 'wei') return v.times(new BN(0.000000000000000001));\n  if (unit === 'kwei') return v.times(new BN(0.000000000000001));\n  if (unit === 'mwei') return v.times(new BN(0.000000000001));\n  if (unit === 'gwei') return v.times(new BN(0.000000001));\n  if (unit === 'szabo') return v.times(new BN(0.000001));\n  if (unit === 'finney') return v.times(new BN(0.001));\n  if (unit === 'ether') return v.times(new BN(1));\n  if (unit === 'kether') return v.times(new BN(1000));\n  if (unit === 'mether') return v.times(new BN(1000000));\n  if (unit === 'gether') return v.times(new BN(1000000000));\n  if (unit === 'tether') return v.times(new BN(1000000000000));\n  throw TypeError('Invalid unit');\n}\n\nfunction converter(value, unit, toUnit) {\n  unit = parseUnit(unit);\n  toUnit = parseUnit(toUnit);\n  var v = convertToEther(value, unit);\n  if (unit === 'eth') unit = 'ether';\n  if (toUnit === 'eth') toUnit = 'ether';\n  var result = {\n    wei: null,\n    kwei: null,\n    mwei: null,\n    gwei: null,\n    szabo: null,\n    finney: null,\n    ether: null,\n    kether: null,\n    mether: null,\n    gether: null,\n    tether: null\n  };\n  result[unit] = new BN(value).toString(10);\n\n  if (unit !== 'wei') {\n    result.wei = v.times(new BN(1000000000000000000)).toString(10);\n  }\n\n  if (unit !== 'kwei') {\n    result.kwei = v.times(new BN(1000000000000000)).toString(10);\n  }\n\n  if (unit !== 'mwei') {\n    result.mwei = v.times(new BN(1000000000000)).toString(10);\n  }\n\n  if (unit !== 'gwei') {\n    result.gwei = v.times(new BN(1000000000)).toString(10);\n  }\n\n  if (unit !== 'szabo') {\n    result.szabo = v.times(new BN(1000000)).toString(10);\n  }\n\n  if (unit !== 'finney') {\n    result.finney = v.times(new BN(1000)).toString(10);\n  }\n\n  if (unit !== 'ether') {\n    result.ether = v.times(new BN(1)).toString(10);\n  }\n\n  if (unit !== 'kether') {\n    result.kether = v.times(new BN(0.001)).toString(10);\n  }\n\n  if (unit !== 'mether') {\n    result.mether = v.times(new BN(0.000001)).toString(10);\n  }\n\n  if (unit !== 'gether') {\n    result.gether = v.times(new BN(0.000000001)).toString(10);\n  }\n\n  if (unit !== 'tether') {\n    result.tether = v.times(new BN(0.000000000001)).toString(10);\n  }\n\n  if (toUnit) {\n    if (result[toUnit] === undefined) {\n      throw TypeError('Invalid unit');\n    }\n\n    return result[toUnit];\n  }\n\n  return result;\n}\n\nmodule.exports = converter;","map":{"version":3,"names":["BN","require","parseUnit","unit","decimalsToUnit","trim","toLowerCase","undefined","isNaN","convertToEther","value","TypeError","v","times","converter","toUnit","result","wei","kwei","mwei","gwei","szabo","finney","ether","kether","mether","gether","tether","toString","module","exports"],"sources":["/home/appventurez/Desktop/MyStuff/Blockchain  JS/Krypto/Crypto/react-crypto/client/node_modules/ethereum-unit-converter/dist/index.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bignumber.js');\n\nfunction parseUnit(unit) {\n  var decimalsToUnit = {\n    '-18': 'wei',\n    '-15': 'kwei',\n    '-12': 'mwei',\n    '-9': 'gwei',\n    '-6': 'szabo',\n    '-3': 'finney',\n    1: 'ether',\n    3: 'kether',\n    6: 'mether',\n    9: 'gether',\n    12: 'tether'\n  };\n  if (typeof unit === 'string') {\n    unit = unit.trim().toLowerCase();\n  }\n  if (unit !== undefined && !isNaN(unit)) {\n    unit = decimalsToUnit[unit];\n  }\n  return unit;\n}\n\nfunction convertToEther(value, unit) {\n  if (value === undefined) {\n    throw TypeError('value is required');\n  }\n  unit = parseUnit(unit);\n  if (unit === undefined) {\n    throw TypeError('unit is required');\n  }\n\n  var v = new BN(value);\n  if (unit === 'eth') unit = 'ether';\n\n  if (unit === 'wei') return v.times(new BN(0.000000000000000001));\n  if (unit === 'kwei') return v.times(new BN(0.000000000000001));\n  if (unit === 'mwei') return v.times(new BN(0.000000000001));\n  if (unit === 'gwei') return v.times(new BN(0.000000001));\n  if (unit === 'szabo') return v.times(new BN(0.000001));\n  if (unit === 'finney') return v.times(new BN(0.001));\n  if (unit === 'ether') return v.times(new BN(1));\n  if (unit === 'kether') return v.times(new BN(1000));\n  if (unit === 'mether') return v.times(new BN(1000000));\n  if (unit === 'gether') return v.times(new BN(1000000000));\n  if (unit === 'tether') return v.times(new BN(1000000000000));\n\n  throw TypeError('Invalid unit');\n}\n\nfunction converter(value, unit, toUnit) {\n  unit = parseUnit(unit);\n  toUnit = parseUnit(toUnit);\n  var v = convertToEther(value, unit);\n  if (unit === 'eth') unit = 'ether';\n  if (toUnit === 'eth') toUnit = 'ether';\n\n  var result = {\n    wei: null,\n    kwei: null,\n    mwei: null,\n    gwei: null,\n    szabo: null,\n    finney: null,\n    ether: null,\n    kether: null,\n    mether: null,\n    gether: null,\n    tether: null\n  };\n\n  result[unit] = new BN(value).toString(10);\n\n  if (unit !== 'wei') {\n    result.wei = v.times(new BN(1000000000000000000)).toString(10);\n  }\n  if (unit !== 'kwei') {\n    result.kwei = v.times(new BN(1000000000000000)).toString(10);\n  }\n  if (unit !== 'mwei') {\n    result.mwei = v.times(new BN(1000000000000)).toString(10);\n  }\n  if (unit !== 'gwei') {\n    result.gwei = v.times(new BN(1000000000)).toString(10);\n  }\n  if (unit !== 'szabo') {\n    result.szabo = v.times(new BN(1000000)).toString(10);\n  }\n  if (unit !== 'finney') {\n    result.finney = v.times(new BN(1000)).toString(10);\n  }\n  if (unit !== 'ether') {\n    result.ether = v.times(new BN(1)).toString(10);\n  }\n  if (unit !== 'kether') {\n    result.kether = v.times(new BN(0.001)).toString(10);\n  }\n  if (unit !== 'mether') {\n    result.mether = v.times(new BN(0.000001)).toString(10);\n  }\n  if (unit !== 'gether') {\n    result.gether = v.times(new BN(0.000000001)).toString(10);\n  }\n  if (unit !== 'tether') {\n    result.tether = v.times(new BN(0.000000000001)).toString(10);\n  }\n\n  if (toUnit) {\n    if (result[toUnit] === undefined) {\n      throw TypeError('Invalid unit');\n    }\n\n    return result[toUnit];\n  }\n\n  return result;\n}\n\nmodule.exports = converter;"],"mappings":"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"},"metadata":{},"sourceType":"script"}